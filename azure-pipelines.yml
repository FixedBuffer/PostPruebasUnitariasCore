# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
    
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - script: dotnet build -- configuration: '$(buildConfiguration)' --platform: '$(buildPlatform)'

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: '**/PruebasUnitarias.csproj'
      arguments: '--configuration $(buildConfiguration)'

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - script: dotnet build -- configuration: '$(buildConfiguration)' --platform: '$(buildPlatform)'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - script: dotnet build -- configuration: '$(buildConfiguration)' --platform: '$(buildPlatform)'

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: '**/PruebasUnitarias.csproj'
      arguments: '--configuration $(buildConfiguration)'
